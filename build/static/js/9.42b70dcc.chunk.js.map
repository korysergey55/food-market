{"version":3,"sources":["services/api.js","Components/section/SectionStyled.js","Components/section/Section.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/admin/AdvFormStyled.js","Components/admin/AdvForm.js","pages/AdminPage.js"],"names":["baseURL","getAllAdvByCategoryApi","category","a","axios","get","response","data","console","log","createNewAdvApi","newAdv","post","getProductByIDApi","id","SectionContainer","styled","div","Section","children","myTitle","title","className","toUpperCase","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","AdvFormContainer","productCategories","AdvForm","initialState","name","price","description","isSale","image","useState","state","setState","onHandleChange","evt","target","type","checked","prev","onSubmit","preventDefault","Notification","onChange","map","AdminPage"],"mappings":"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","file":"static/js/9.42b70dcc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// const baseURL = \"https://react-shop-5c360-default-rtdb.firebaseio.com/\"; //korysergey55@gmail.com\r\n// const baseURL = \"https://criptoshop-62529-default-rtdb.firebaseio.com/\"; //korysergeyDev@gmail.com\r\n// REACT_APP_BASE_URL = https://criptoshop-62529-default-rtdb.firebaseio.com/ //env korysergeyDev@gmail.com\r\n// REACT_APP_API_KEY = AIzaSyBWUe5DycXWIqiLuoM_--zJGO5qLfUwhkU // env korysergeyDev@gmail.com\r\n\r\n// API_KEY AIzaSyAADYypCDfRfFwciAHHzne5jN9KfL5j2d4  //olgakoritsk@gmail.com\r\nconst baseURL = \"https://appleshop-504a0-default-rtdb.firebaseio.com/\"  //olgakoritsk@gmail.com\r\n\r\nexport const getAllAdvByCategoryApi = async (category) => {\r\n try {\r\n  const response = await axios.get(baseURL + `advertisements/${category}.json`);\r\n  return response.data;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const createNewAdvApi = async (category, newAdv) => {\r\n try {\r\n  const response = await axios.post(\r\n   baseURL + `advertisements/${category}.json`,\r\n   newAdv\r\n  );\r\n  return response;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const deleteAdvApi = async (category, id) => {\r\n try {\r\n  await axios.delete(baseURL + `advertisements/${category}/${id}.json`);\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const getProductByIDApi = async (category, id) => {\r\n try {\r\n  const response = await axios.get(\r\n   baseURL + `advertisements/${category}/${id}.json`\r\n  );\r\n  return response.data;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const createNewOrderApi = async (order) => {\r\n try {\r\n  await axios.post(baseURL + \"orders.json\", order);\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.div`\r\n padding: 10px 0 20px 0;\r\n &:not(:last-child) {\r\n  border-bottom: 2px solid #819ff5;\r\n }\r\n\r\n .sectionTitle {\r\n  color: #819ff5;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n }\r\n\r\n @media (min-width: 768px) {\r\n  .sectionTitle {\r\n   padding-left: 10px;\r\n   text-align: start;\r\n  }\r\n }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionContainer } from \"./SectionStyled\";\r\n\r\nconst Section = ({ children, title: myTitle, }) => {\r\n  return (\r\n    <SectionContainer>\r\n      <h2 className='sectionTitle'>{myTitle.toUpperCase()}</h2>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from \"styled-components\";\r\n\r\nexport const AdvFormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 20px 10px 0 10px;\r\n\r\n  .advFormLabel {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 16px;\r\n  }\r\n  .advFormInput {\r\n    border: 1px solid #819ff5;\r\n    height: 30px;\r\n    border-radius: 14px;\r\n    padding-left: 10px;\r\n    margin: 5px 0;\r\n    font-size: 14px;\r\n    outline: none;\r\n    &:hover {\r\n      border: 2px solid #5f73a1;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .advFormLabelCheckBox {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    font-size: 16px;\r\n  }\r\n  .advFormCheckBox {\r\n    margin-left: 10px;\r\n  }\r\n  .submitButton {\r\n    display: block;\r\n    margin: 0 auto;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    .advFormContent {\r\n      display: flex;\r\n      flex-direction: row;\r\n    }\r\n    .leftColumn,\r\n    .rightColumn {\r\n      width: 50%;\r\n      padding: 0 5px;\r\n    }\r\n    .advFormLabelCheckBox {\r\n      margin-top: 30px;\r\n    }\r\n    .submitButton {\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    .advFormContent {\r\n      justify-content: center;\r\n    }\r\n    .leftColumn,\r\n    .rightColumn {\r\n      width: 30%;\r\n      padding: 0 10px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { AdvFormContainer } from \"./AdvFormStyled\";\r\nimport { createNewAdvApi } from \"../../services/api\";\r\nimport { useState } from \"react\";\r\nimport Notification from \"../notify\";\r\n\r\nconst productCategories = [\r\n  \"phones\",\r\n  \"laptops\",\r\n  \"ipad\",\r\n  \"appleWatch\",\r\n  \"airPods\",\r\n];\r\n\r\nconst AdvForm = () => {\r\n  const initialState = {\r\n    category: productCategories[0],\r\n    name: \"\",\r\n    price: \"\",\r\n    description: \"\",\r\n    isSale: false,\r\n    image: \"\",\r\n  };\r\n\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const onHandleChange = (evt) => {\r\n    const { name, value, type, checked } = evt.target;\r\n    if (type === \"checkbox\") {\r\n      setState((prev) => ({ ...prev, [name]: checked }));\r\n      return;\r\n    }\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    createNewAdvApi(state.category, { ...state });\r\n    Notification(\"addProductToCartSuccess\");\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <AdvFormContainer>\r\n      <form onSubmit={onHandleSubmit} className=\"advForm\">\r\n        <div className=\"advFormContent\">\r\n          <div className=\"leftColumn\">\r\n            <label className=\"advFormLabel\">\r\n              Category\r\n              <select\r\n                value={state.category}\r\n                name=\"category\"\r\n                className=\"advFormInput\"\r\n                onChange={onHandleChange}\r\n              >\r\n                {productCategories.map((category) => (\r\n                  <option value={category} key={category}>\r\n                    {category}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n\r\n            <label className=\"advFormLabel\">\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={state.name}\r\n                className=\"advFormInput\"\r\n                onChange={onHandleChange}\r\n              />\r\n            </label>\r\n            <label className=\"advFormLabel\">\r\n              Picture\r\n              <input\r\n                type=\"text\"\r\n                name=\"image\"\r\n                value={state.image}\r\n                className=\"advFormInput\"\r\n                onChange={onHandleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"rightColumn\">\r\n            <label className=\"advFormLabel\">\r\n              Description\r\n              <input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={state.description}\r\n                className=\"advFormInput\"\r\n                onChange={onHandleChange}\r\n              />\r\n            </label>\r\n            <label className=\"advFormLabel\">\r\n              Price\r\n              <input\r\n                type=\"text\"\r\n                name=\"price\"\r\n                value={state.price}\r\n                className=\"advFormInput\"\r\n                onChange={onHandleChange}\r\n              />\r\n            </label>\r\n            <label className=\"advFormLabelCheckBox\">\r\n              In sale\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"isSale\"\r\n                checked={state.isSale}\r\n                className=\"advFormCheckBox\"\r\n                onChange={onHandleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"submitButton\">\r\n          Add product\r\n        </button>\r\n      </form>\r\n    </AdvFormContainer>\r\n  );\r\n};\r\n\r\nexport default AdvForm;\r\n\r\n\r\n\r\n// class AdvForm extends Component {\r\n//  state = {\r\n//   ...initialState,\r\n//  };\r\n\r\n//  onHandleChange = (e) => {\r\n//   const { name, value, type, checked } = e.target;\r\n//   if (type === \"checkbox\") {\r\n//    this.setState({ [name]: checked });\r\n//    return;\r\n//   }\r\n//   this.setState({ [name]: value });\r\n//  };\r\n//  onHandleSubmit = (e) => {\r\n//   e.preventDefault();\r\n//   createNewAdvApi(this.state.category, { ...this.state });\r\n//   alert(\"Товар добавлен\");\r\n//   this.setState({ ...initialState });\r\n//  };\r\n//  render() {\r\n//   return (\r\n//    <AdvFormContainer>\r\n//     <form onSubmit={this.onHandleSubmit} className=\"advForm\">\r\n//      <div className=\"advFormContent\">\r\n//       <div className=\"leftColumn\">\r\n//        <label className=\"advFormLabel\">\r\n//         Category\r\n//         <select\r\n//          value={this.state.category}\r\n//          name=\"category\"\r\n//          className=\"advFormInput\"\r\n//          onChange={this.onHandleChange}\r\n//         >\r\n//          {productCategories.map((category) => (\r\n//           <option value={category} key={category}>\r\n//            {category}\r\n//           </option>\r\n//          ))}\r\n//         </select>\r\n//        </label>\r\n\r\n//        <label className=\"advFormLabel\">\r\n//         Name\r\n//         <input\r\n//          type=\"text\"\r\n//          name=\"name\"\r\n//          value={this.state.name}\r\n//          className=\"advFormInput\"\r\n//          onChange={this.onHandleChange}\r\n//         />\r\n//        </label>\r\n//        <label className=\"advFormLabel\">\r\n//         Picture\r\n//         <input\r\n//          type=\"text\"\r\n//          name=\"image\"\r\n//          value={this.state.image}\r\n//          className=\"advFormInput\"\r\n//          onChange={this.onHandleChange}\r\n//         />\r\n//        </label>\r\n//       </div>\r\n//       <div className=\"rightColumn\">\r\n//        <label className=\"advFormLabel\">\r\n//         Description\r\n//         <input\r\n//          type=\"text\"\r\n//          name=\"description\"\r\n//          value={this.state.description}\r\n//          className=\"advFormInput\"\r\n//          onChange={this.onHandleChange}\r\n//         />\r\n//        </label>\r\n//        <label className=\"advFormLabel\">\r\n//         Price\r\n//         <input\r\n//          type=\"text\"\r\n//          name=\"price\"\r\n//          value={this.state.price}\r\n//          className=\"advFormInput\"\r\n//          onChange={this.onHandleChange}\r\n//         />\r\n//        </label>\r\n//        <label className=\"advFormLabelCheckBox\">\r\n//         In sale\r\n//         <input\r\n//          type=\"checkbox\"\r\n//          name=\"isSale\"\r\n//          checked={this.state.isSale}\r\n//          className=\"advFormCheckBox\"\r\n//          onChange={this.onHandleChange}\r\n//         />\r\n//        </label>\r\n//       </div>\r\n//      </div>\r\n//      <button type=\"submit\" className=\"submitButton\">\r\n//       Add product\r\n//      </button>\r\n//     </form>\r\n//    </AdvFormContainer>\r\n//   );\r\n//  }\r\n// }\r\n\r\n// export default AdvForm;\r\n","import React from \"react\";\r\nimport Section from \"../Components/section/Section\";\r\nimport AdvForm from \"../Components/admin/AdvForm\";\r\n\r\nconst AdminPage = () => {\r\n  return (\r\n    <>\r\n      <Section title='Administration'>\r\n        <AdvForm  />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"sourceRoot":""}