{"version":3,"sources":["containers/modalAnt/styles.module.scss","Components/auth/loginForm/styles.module.scss","Components/auth/authForm/styles.module.scss","Components/auth/resetForm/styles.module.scss","Components/auth/styles.module.scss","containers/modalAnt/ModalAnt.js","containers/Utils/Firebase/firebase.js","Components/auth/loginForm/LoginForm.js","Components/auth/authForm/AuthForm.js","Components/auth/resetForm/ResetForm.js","Components/auth/LoginPage.js"],"names":["module","exports","ModalAnt","observer","title","visible","children","width","AuthStore","useStore","history","useHistory","className","styles","modal","onOk","toggleAntModalAction","onCancel","push","resetForgotPasswordAction","footer","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","OAuth","auth","db","firestore","languageCode","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","signInWithGoogle","a","signInWithPopup","res","toast","success","theme","console","error","message","signInWithFacebook","signInWithEmailAndPassword","email","password","registerWithEmailAndPassword","name","createUserWithEmailAndPassword","user","collection","add","uid","authProvider","sendPasswordResetEmail","pathes","home","LoginForm","loginGoogle","loginUserAction","credential","accessToken","loginFacebook","loginForm","subtitle","list","item","onClick","text","loginBtn","type","icon","faGoogle","color","size","faFacebookF","AuthForm","useState","login","setLogin","Form","useForm","form","formData","setFormData","setUser","toggleModalAction","onChange","evt","target","value","prev","authForm","labelCol","span","wrapperCol","initialValues","remember","onFinish","setFieldsValue","onFinishFailed","errorInfo","log","autoComplete","btnContainer","classNames","btnChange","activ","Item","label","rules","required","e","Password","forgotPassword","setForgotPasswordAction","chekbox","valuePropName","offset","htmlType","ResetPassword","userEmail","setUserEmail","formContainer","input","placeholder","LoginPage","antModal","useEffect","hero","container","wripper"],"mappings":"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","file":"static/js/17.c6afd646.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__3OLF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"styles_loginForm__1Ug6T\",\"subtitle\":\"styles_subtitle__DVqlZ\",\"list\":\"styles_list__27zuj\",\"item\":\"styles_item__2NJ8-\",\"loginBtn\":\"styles_loginBtn__1_zSz\",\"text\":\"styles_text__1rlwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authForm\":\"styles_authForm__3-gAT\",\"form\":\"styles_form__3E2bq\",\"btnContainer\":\"styles_btnContainer__2gdhf\",\"btnChange\":\"styles_btnChange__1eZJn\",\"activ\":\"styles_activ__1UvFZ\",\"forgotPassword\":\"styles_forgotPassword__2qDj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"styles_formContainer__3y7ys\",\"title\":\"styles_title__3cD-X\",\"label\":\"styles_label__2vNUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"styles_hero__1n0Nn\",\"container\":\"styles_container__3UEH9\",\"wripper\":\"styles_wripper__AamIa\"};","import React from 'react'\r\nimport { useStore } from '../../storeMobx'\r\nimport { observer } from 'mobx-react'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport styles from './styles.module.scss'\r\nimport { Modal } from 'antd'\r\n\r\nconst ModalAnt = observer(({ title, visible, children, width }) => {\r\n  const {AuthStore} = useStore()\r\n  const history = useHistory()\r\n  \r\n  const handleOk = () => {\r\n    AuthStore.toggleAntModalAction()\r\n  }\r\n  const handleCancel = () => {\r\n    AuthStore.toggleAntModalAction()\r\n    history.push('/')\r\n    AuthStore.resetForgotPasswordAction()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      className={styles.modal}\r\n      width={width}\r\n      visible={visible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={true}\r\n    >\r\n      {children}\r\n    </Modal>\r\n  )\r\n})\r\n\r\nexport default ModalAnt\r\n","import firebase from 'firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { pathes } from '../../../utils/pathes'\r\n\r\nlet configKorySergey = {\r\n  apiKey: process.env.REACT_APP_WEB_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  OAuth: process.env.REACT_APP_OAUTH,\r\n}\r\n\r\nconst app = firebase.initializeApp(configKorySergey)\r\nconst auth = app.auth()\r\nconst db = app.firestore()\r\nauth.languageCode = 'en'\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider()\r\n\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(googleProvider)\r\n    if (res) {\r\n      toast.success('You was successfully Login!', {\r\n        theme: 'colored',\r\n      })\r\n    }\r\n    return res\r\n  } catch (err) {\r\n    console.error(err)\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    })\r\n  }\r\n}\r\nconst signInWithFacebook = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(facebookProvider)\r\n    return res\r\n  } catch (err) {\r\n    console.error(err)\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    })\r\n  }\r\n}\r\nconst signInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    const res = await auth.signInWithEmailAndPassword(email, password)\r\n    if (res) {\r\n      toast.success('You was successfully Login!', {\r\n        theme: 'colored',\r\n      })\r\n    }\r\n    return res\r\n  } catch (err) {\r\n    console.error(err)\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    })\r\n  }\r\n}\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(email, password)\r\n    if (res) {\r\n      toast.success('You was successfully registered. Login please!', {\r\n        theme: 'colored',\r\n      })\r\n    }\r\n    const user = res.user\r\n    await db.collection('users').add({\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: 'local',\r\n      email,\r\n    })\r\n  } catch (err) {\r\n    console.error(err)\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    })\r\n  }\r\n}\r\nconst sendPasswordResetEmail = async (email, history) => {\r\n  try {\r\n    const res = await auth.sendPasswordResetEmail(email)\r\n    toast('Password reset link sent! Check your email!', {\r\n      theme: 'colored',\r\n    })\r\n    if (res) {\r\n      history.push(pathes.home)\r\n    }\r\n  } catch (err) {\r\n    console.error(err)\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    })\r\n  }\r\n}\r\n\r\nconst logout = () => {\r\n  auth.signOut()\r\n  toast.success('signOut success!', {\r\n    theme: 'colored',\r\n  })\r\n}\r\n\r\nexport {\r\n  auth,\r\n  db,\r\n  signInWithGoogle,\r\n  logout,\r\n  signInWithFacebook,\r\n  signInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { useStore } from '../../../storeMobx'\r\nimport { observer } from 'mobx-react'\r\nimport { pathes } from '../../../utils/pathes'\r\nimport {\r\n  signInWithGoogle,\r\n  signInWithFacebook,\r\n} from '../../../containers/Utils/Firebase/firebase'\r\n\r\nimport styles from './styles.module.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGoogle, faFacebookF } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst LoginForm = observer(() => {\r\n  const { AuthStore } = useStore()\r\n  const history = useHistory()\r\n\r\n  const loginGoogle = async () => {\r\n    const res = await signInWithGoogle()\r\n    if (res) {\r\n      AuthStore.loginUserAction(res.credential.accessToken)\r\n      history.push(pathes.home)\r\n    }\r\n  }\r\n\r\n  const loginFacebook = async () => {\r\n    const res = await signInWithFacebook()\r\n    if (res) {\r\n      AuthStore.loginUserAction(res.credential.accessToken)\r\n      history.push(pathes.home)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.loginForm}>\r\n      <h2 className={styles.subtitle}>Login with</h2>\r\n      <ul className={styles.list}>\r\n        <li className={styles.item} name=\"google\" onClick={() => loginGoogle()}>\r\n          <p className={styles.text}> Google</p>\r\n          <button className={styles.loginBtn} type=\"button\">\r\n            <FontAwesomeIcon\r\n              className={styles.icon}\r\n              icon={faGoogle}\r\n              color=\"white\"\r\n              size=\"2x\"\r\n            />\r\n          </button>\r\n        </li>\r\n        <li\r\n          className={styles.item}\r\n          name=\"facebook\"\r\n          onClick={() => loginFacebook()}\r\n        >\r\n          <p className={styles.text}> Facebook</p>\r\n          <button className={styles.loginBtn} type=\"button\">\r\n            <FontAwesomeIcon icon={faFacebookF} color=\"white\" size=\"2x\" />\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default LoginForm\r\n","import React, { useState } from 'react'\r\nimport { useStore } from '../../../storeMobx'\r\nimport { observer } from 'mobx-react'\r\nimport { useHistory } from 'react-router'\r\nimport { pathes } from '../../../utils/pathes'\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n} from '../../../containers/Utils/Firebase/firebase'\r\n\r\nimport styles from './styles.module.scss'\r\nimport classNames from 'classnames'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\n\r\nconst AuthForm = observer(() => {\r\n  const { AuthStore } = useStore()\r\n  const history = useHistory()\r\n\r\n  const [login, setLogin] = useState(true)\r\n  const [form] = Form.useForm()\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const setUser = async () => {\r\n    if (login) {\r\n      const res = await signInWithEmailAndPassword(\r\n        formData.email,\r\n        formData.password\r\n      )\r\n      if (res) {\r\n        AuthStore.toggleModalAction()\r\n        history.push(pathes.home)\r\n      }\r\n    } else {\r\n      registerWithEmailAndPassword(\r\n        formData.name,\r\n        formData.email,\r\n        formData.password\r\n      )\r\n      history.push(pathes.login)\r\n      AuthStore.toggleModalAction()\r\n    }\r\n  }\r\n\r\n  const onChange = evt => {\r\n    const { value, name } = evt.target\r\n    setFormData(prev => ({ ...prev, [name]: value }))\r\n  }\r\n\r\n  const onFinish = () => {\r\n    setUser()\r\n    setLogin(true)\r\n    form.setFieldsValue({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    })\r\n  }\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.authForm}>\r\n      <Form\r\n        form={form}\r\n        name=\"AuthForm\"\r\n        className={styles.form}\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className={styles.btnContainer}>\r\n          <Button\r\n            className={classNames(styles.btnChange, { [styles.activ]: login })}\r\n            type=\"primary\"\r\n            onClick={() => setLogin(true)}\r\n          >\r\n            Вход\r\n          </Button>\r\n\r\n          <Button\r\n            className={classNames(styles.btnChange, { [styles.activ]: !login })}\r\n            type=\"primary\"\r\n            onClick={() => setLogin(false)}\r\n          >\r\n            Регистрация\r\n          </Button>\r\n        </div>\r\n\r\n        {!login && (\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: 'Введите Ваше Имя!' }]}\r\n          >\r\n            <Input\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={e => onChange(e)}\r\n            />\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: 'Введите email!' }]}\r\n        >\r\n          <Input name=\"email\" value={formData.email} onChange={onChange} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Введите password!' }]}\r\n        >\r\n          <Input.Password\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={onChange}\r\n          />\r\n        </Form.Item>\r\n        {login && (\r\n          <p\r\n            className={styles.forgotPassword}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              AuthStore.setForgotPasswordAction()\r\n            }}\r\n          >\r\n            Забыли пароль?\r\n          </p>\r\n        )}\r\n        <Form.Item\r\n          className={styles.chekbox}\r\n          name=\"remember\"\r\n          valuePropName=\"checked\"\r\n          wrapperCol={{ offset: 8, span: 16 }}\r\n        >\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Подтвердить\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default AuthForm\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { sendPasswordResetEmail } from '../../../containers/Utils/Firebase/firebase'\r\n\r\nimport styles from './styles.module.scss'\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nconst ResetPassword = () => {\r\n  const history = useHistory()\r\n  const [userEmail, setUserEmail] = useState('')\r\n\r\n  const onChange = e => {\r\n    const { value } = e.target\r\n    setUserEmail(value)\r\n  }\r\n  const onFinish = () => {\r\n    sendPasswordResetEmail(userEmail, history)\r\n  }\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <Form\r\n        name=\"ResetPassvorfForm\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h2 className={styles.title}>Страница сброса пароля!</h2>\r\n        <Form.Item\r\n         className={styles.label}\r\n          label=\"Введите Ваш email\"\r\n          rules={[{ required: true, message: 'Введите Ваш email!' }]}\r\n        >\r\n          <Input\r\n            className={styles.input}\r\n            name=\"email\"\r\n            value={userEmail}\r\n            placeholder=\"Введите Ваш email\"\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Сбросить пароль\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n","import React, { useEffect } from 'react'\r\nimport { useStore } from '../../storeMobx'\r\nimport { observer } from 'mobx-react'\r\n\r\nimport ModalAnt from '../../containers/modalAnt/ModalAnt'\r\nimport Header from '../../containers/header/Header'\r\nimport LoginForm from './loginForm/LoginForm'\r\nimport AuthForm from './authForm/AuthForm'\r\nimport ResetPassword from './resetForm/ResetForm'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst LoginPage = observer(() => {\r\n  const { AuthStore } = useStore()\r\n  const { antModal, forgotPassword } = AuthStore\r\n\r\n  useEffect(() => {\r\n    AuthStore.toggleAntModalAction()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.LoginPage}>\r\n      <div className={styles.hero}></div>\r\n      <div className={styles.hero}></div>\r\n      <div className={styles.container}>\r\n        {antModal && (\r\n          <ModalAnt visible={true} width=\"700px\">\r\n            <div className={styles.wripper}>\r\n              {!forgotPassword ? (\r\n                <>\r\n                  <AuthForm />\r\n                  <LoginForm />\r\n                </>\r\n              ) : (\r\n                <ResetPassword />\r\n              )}\r\n            </div>\r\n          </ModalAnt>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default LoginPage\r\n"],"sourceRoot":""}