{"version":3,"sources":["services/api.js","Components/phoneList/PhoneListStyled.js","Components/phoneList/phoneListItem/PhoneListItemStyled.js","Components/phoneList/phoneListItem/PhoneListItem.js","Components/phoneList/PhoneList.js"],"names":["baseURL","getAllAdvByCategoryApi","category","a","axios","get","response","data","console","log","createNewAdvApi","newAdv","post","getProductByIDApi","id","PhoneUl","styled","ul","PhoneLi","li","withRouter","phone","dispatch","useDispatch","history","useHistory","location","useLocation","match","useRouteMatch","openDetails","push","pathname","path","state","from","className","name","src","image","alt","onClick","isSale","price","toFixed","addToCart","Notification","PhoneList","phones","useSelector","getProductsFilterSelector","useEffect","phonesList","Object","keys","map","key","setPhones","getPhones","uuidv4"],"mappings":"yPAQMA,EAAU,uDAEHC,EAAsB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEbC,IAAMC,IAAIL,EAAO,yBAAqBE,EAArB,UAFJ,cAE9BI,EAF8B,yBAG7BA,EAASC,MAHoB,gCAKpCC,QAAQC,IAAR,MALoC,yDAAH,sDAStBC,EAAe,uCAAG,WAAOR,EAAUS,GAAjB,eAAAR,EAAA,+EAENC,IAAMQ,KAC5BZ,EAAO,yBAAqBE,EAArB,SACPS,GAJ4B,cAEvBL,EAFuB,yBAMtBA,GANsB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,wDAoBfI,EAAiB,uCAAG,WAAOX,EAAUY,GAAjB,eAAAX,EAAA,+EAERC,IAAMC,IAC5BL,EAAO,yBAAqBE,EAArB,YAAiCY,EAAjC,UAHuB,cAEzBR,EAFyB,yBAKxBA,EAASC,MALe,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,yD,gHCrCjBM,EAAUC,IAAOC,GAAV,yGCAPC,EAAUF,IAAOG,GAAV,ovC,sCCmELC,eAzDO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAWC,cACXC,EAAUC,cACVC,EAAWC,cACXC,EAAQC,cAORC,EAAc,WACnBN,EAAQO,KAAK,CACZC,SAAS,GAAD,OAAKJ,EAAMK,KAAX,YAAmBZ,EAAMP,IACjCoB,MAAO,CAAEC,KAAMT,EAASM,aAI1B,OACC,cAACd,EAAD,UACC,sBAAKkB,UAAU,UAAf,UACC,oBAAIA,UAAU,gBAAd,SAA+Bf,EAAMgB,OACrC,qBAAKD,UAAU,eAAf,SACC,qBACCE,IAAKjB,EAAMkB,MACXC,IAAKnB,EAAMgB,KACXD,UAAU,gBACVK,QAASX,MAIX,oBAAGM,UAAU,aAAb,UACEf,EAAMqB,OACN,qCACC,uBAAMN,UAAU,gBAAhB,cAAkCf,EAAMsB,SAAc,IACtD,sBAAMP,UAAU,mBAAhB,UACGf,EAAMsB,MAAQtB,EAAMsB,MAAQ,IAAIC,QAAQ,QAI5C,sBAAMR,UAAU,mBAAhB,SAAoCf,EAAMsB,QAE1C,UAEF,sBAAKP,UAAU,UAAf,UACC,wBAAQA,UAAU,gBAAgBK,QAASX,EAA3C,qBAGA,wBAAQW,QA1CO,WAClBnB,EAASuB,YAAUxB,IAClByB,YAAa,4BAwCkBV,UAAU,kBAAvC,oC,0BCrBUW,UA5BG,WACjB,IAAMzB,EAAWC,cACXyB,EAASC,aAAY,SAACf,GAAD,OAC1BgB,YAA0BhB,EAAO,aAiBlC,OAdAiB,qBAAU,YACM,uCAAG,8BAAAhD,EAAA,sEACMF,YAAuB,UAD7B,QACXK,EADW,UAGV8C,EAAaC,OAAOC,KAAKhD,GAAUiD,KAAI,SAACC,GAAD,oBAC5C1C,GAAI0C,GACDlD,EAASkD,OAEblC,EAASmC,YAAUL,KAPH,2CAAH,qDAUfM,KACE,CAACpC,IAGF,cAACP,EAAD,iBACCiC,QADD,IACCA,OADD,EACCA,EAAQO,KAAI,SAAClC,GAAD,OACX,cAAC,EAAD,CAAeA,MAAOA,GAAYsC","file":"static/js/15.0967fa1a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// const baseURL = \"https://react-shop-5c360-default-rtdb.firebaseio.com/\"; //korysergey55@gmail.com\r\n// const baseURL = \"https://criptoshop-62529-default-rtdb.firebaseio.com/\"; //korysergeyDev@gmail.com\r\n// REACT_APP_BASE_URL = https://criptoshop-62529-default-rtdb.firebaseio.com/ //env korysergeyDev@gmail.com\r\n// REACT_APP_API_KEY = AIzaSyBWUe5DycXWIqiLuoM_--zJGO5qLfUwhkU // env korysergeyDev@gmail.com\r\n\r\n// API_KEY AIzaSyAADYypCDfRfFwciAHHzne5jN9KfL5j2d4  //olgakoritsk@gmail.com\r\nconst baseURL = \"https://appleshop-504a0-default-rtdb.firebaseio.com/\"  //olgakoritsk@gmail.com\r\n\r\nexport const getAllAdvByCategoryApi = async (category) => {\r\n try {\r\n  const response = await axios.get(baseURL + `advertisements/${category}.json`);\r\n  return response.data;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const createNewAdvApi = async (category, newAdv) => {\r\n try {\r\n  const response = await axios.post(\r\n   baseURL + `advertisements/${category}.json`,\r\n   newAdv\r\n  );\r\n  return response;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const deleteAdvApi = async (category, id) => {\r\n try {\r\n  await axios.delete(baseURL + `advertisements/${category}/${id}.json`);\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const getProductByIDApi = async (category, id) => {\r\n try {\r\n  const response = await axios.get(\r\n   baseURL + `advertisements/${category}/${id}.json`\r\n  );\r\n  return response.data;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const createNewOrderApi = async (order) => {\r\n try {\r\n  await axios.post(baseURL + \"orders.json\", order);\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const PhoneUl = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PhoneLi = styled.li`\r\n width: 100%;\r\n padding: 20px;\r\n\r\n .content {\r\n  border-radius: 14px;\r\n  border: 1px solid #a8a8a8;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 330px;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n   1px 4px 6px rgba(0, 0, 0, 0.16);\r\n }\r\n\r\n .listItemTitle {\r\n  font-size: 16px;\r\n  text-align: center;\r\n }\r\n\r\n .imageWrapper {\r\n  height: 130px;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px 0;\r\n }\r\n\r\n .listItemImage {\r\n  height: 100%;\r\n }\r\n .listItemImage:hover {\r\n  cursor: pointer;\r\n }\r\n .colorsList {\r\n  display: flex;\r\n  list-style: none;\r\n }\r\n .priceTitle {\r\n  text-align: center;\r\n  font-size: 20px;\r\n }\r\n .withSalePrice {\r\n  text-decoration: line-through;\r\n  color: #dc143c;\r\n }\r\n .withoutSalePrice {\r\n  font-weight: 600;\r\n  color: #819ff5;\r\n  font-size: 30px;\r\n }\r\n .options {\r\n  display: flex;\r\n  align-items: center;\r\n }\r\n .detailsButton {\r\n  width: 50%;\r\n  border-radius: 14px 0 0 14px;\r\n  margin-right: 1px;\r\n }\r\n .addToCartButton {\r\n  width: 50%;\r\n  border-radius: 0 14px 14px 0;\r\n  margin-right: 1px;\r\n }\r\n\r\n @media (min-width: 768px) {\r\n  width: 50%;\r\n }\r\n\r\n @media (min-width: 1024px) {\r\n  width: 25%;\r\n }\r\n`;\r\n","import React from \"react\";\r\nimport { PhoneLi } from \"./PhoneListItemStyled\";\r\nimport Notification from '../../notify'\r\nimport { useDispatch} from \"react-redux\";\r\nimport {\r\n useHistory,\r\n useLocation,\r\n useRouteMatch,\r\n withRouter,\r\n} from \"react-router-dom\";\r\nimport { addToCart } from \"../../../redux/cart/cartActions\";\r\n\r\nconst PhoneListItem = ({ phone }) => {\r\n const dispatch = useDispatch();\r\n const history = useHistory();\r\n const location = useLocation();\r\n const match = useRouteMatch();\r\n\r\n const addProduct = () => {\r\n  dispatch(addToCart(phone));\r\n   Notification(\"addProductToCartSuccess\");\r\n };\r\n\r\n const openDetails = () => {\r\n  history.push({\r\n   pathname: `${match.path}/${phone.id}`,\r\n   state: { from: location.pathname },\r\n  });\r\n };\r\n\r\n return (\r\n  <PhoneLi>\r\n   <div className=\"content\">\r\n    <h3 className=\"listItemTitle\">{phone.name}</h3>\r\n    <div className=\"imageWrapper\">\r\n     <img\r\n      src={phone.image}\r\n      alt={phone.name}\r\n      className=\"listItemImage\"\r\n      onClick={openDetails}\r\n     />\r\n    </div>\r\n\r\n    <p className=\"priceTitle\">\r\n     {phone.isSale ? (\r\n      <>\r\n       <span className=\"withSalePrice\"> {phone.price}</span>{\" \"}\r\n       <span className=\"withoutSalePrice\">\r\n        {(phone.price - phone.price / 10).toFixed(0)}\r\n       </span>\r\n      </>\r\n     ) : (\r\n      <span className=\"withoutSalePrice\">{phone.price}</span>\r\n     )}\r\n     {\" UAH\"}\r\n    </p>\r\n    <div className=\"options\">\r\n     <button className=\"detailsButton\" onClick={openDetails}>\r\n      Details\r\n     </button>\r\n     <button onClick={addProduct} className=\"addToCartButton\">\r\n      Add to cart\r\n     </button>\r\n    </div>\r\n   </div>\r\n  </PhoneLi>\r\n );\r\n};\r\n\r\nexport default withRouter(PhoneListItem);\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { PhoneUl } from \"./PhoneListStyled\";\r\nimport PhoneListItem from \"./phoneListItem/PhoneListItem\";\r\nimport { getAllAdvByCategoryApi } from \"../../services/api\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { setPhones } from \"../../redux/products/productsActions\";\r\nimport { getProductsFilterSelector } from \"../../redux/filter/filterSelectors\";\r\n\r\nconst PhoneList = () => {\r\n const dispatch = useDispatch();\r\n const phones = useSelector((state) =>\r\n  getProductsFilterSelector(state, \"phones\")\r\n );\r\n\r\n useEffect(() => {\r\n  const getPhones = async () => {\r\n   const response = await getAllAdvByCategoryApi(\"phones\");\r\n   if (response) {\r\n    const phonesList = Object.keys(response).map((key) => ({\r\n     id: key,\r\n     ...response[key],\r\n    }));\r\n    dispatch(setPhones(phonesList));\r\n   }\r\n  };\r\n  getPhones();\r\n }, [dispatch]);\r\n\r\n return (\r\n   <PhoneUl>\r\n   {phones?.map((phone) => (\r\n     <PhoneListItem phone={phone} key={uuidv4()} />\r\n   ))}\r\n  </PhoneUl>\r\n );\r\n};\r\nexport default PhoneList;\r\n"],"sourceRoot":""}